Test file for matrix_mul.py
===============================

Using ``matrix_mul``
-------------------------

Import module:
       >>> matrix_mul = __import__('100-matrix_mul').matrix_mul

Multiply two matrices:

    >>> matrix_mul([[1, 2], [3, 4]], [[1, 2], [3, 4]])
    [[7, 10], [15, 22]]

Multiply 3x3 matrices:
    >>> lst1 = [[12, 8, 4], [3, 17, 14], [9, 8, 10]]
    >>> lst2 = [[5, 19, 3], [6, 15, 9], [7, 8, 16]]
    >>> matrix_mul(lst1, lst2)
    [[136, 380, 172], [215, 424, 386], [163, 371, 259]]

multiply single matrix:
    >>> lst1 = [[4], [2], [1]]
    >>> lst2 = [[2,4,6]]
    >>> matrix_mul(lst2, lst1)
    [[22]]

multiply 4x4 matrices:
    >>> lst1 = [[7, 14, 15, 6], [4, 8, 12, 3], [14, 21, 6, 9], [13, 7, 6, 4]]
    >>> lst2 = [[5, 7, 14, 2], [8, 16, 4, 9], [13, 6, 8, 4], [6, 3, 2, 4]]
    >>> matrix_mul(lst1, lst2)
    [[378, 381, 286, 224], [258, 237, 190, 140], [370, 497, 346, 277], [223, 251, 266, 129]]

Passing None as a matrix
    >>> matrix_mul(None, None)
    Traceback (most recent call last):
    ...
    TypeError: m_a must be a list

Passing None as a matrix
    >>> matrix_mul([[7, 12]], None)
    Traceback (most recent call last):
    ...
    TypeError: m_b must be a list

Passing a tuple as a matrix
    >>> matrix_mul((1, 3, 5), [[1.3], [5.2], [7.7]])
    Traceback (most recent call last):
    ...
    TypeError: m_a must be a list

Passing a string as a matrix
    >>> matrix_mul([[3, 3], [4, 4]], "School")
    Traceback (most recent call last):
    ...
    TypeError: m_b must be a list

Passing a list of tuples
   >>> matrix_mul([(1, 5, 10)], [(1), (5)])
   Traceback (most recent call last):
   ...
   TypeError: m_a must be a list of lists

Passing a list of string
   >>> matrix_mul([[3, 6, 8], [2, 11, 9]], ["Holberton"])
   Traceback (most recent call last):
   ...
   TypeError: m_b must be a list of lists

Passing an empty matrix
    >>> matrix_mul([], [[1]])
    Traceback (most recent call last):
    ...
    ValueError: m_a can't be empty

Passing an empty matrix 2
    >>> matrix_mul([[1, 2]], [[]])
    Traceback (most recent call last):
    ...
    ValueError: m_b can't be empty

Passing a matrix with a list of strings
    >>> matrix_mul([[1, '1', 1], ['2', 2, '2']], [[3], [3]])
    Traceback (most recent call last):
    ...
    TypeError: m_a should contain only integers or floats

Passing a matrix with a list of strings 2
    >>> matrix_mul([[2, 4, 6], [3, 6, 9]], [[1], ['2'], [3]])
    Traceback (most recent call last):
    ...
    TypeError: m_b should contain only integers or floats

Passing a matrix with an empty list
    >>> matrix_mul([[12, 12, 12], [], [14, 14, 14]], [[2], [3], [8]])
    Traceback (most recent call last):
    ...
    TypeError: each row of m_a must be of the same size

Passing a matrix which its rows have different size
    >>> matrix_mul([[2, 2, 2], [4, 4, 4]], [[2], [3, 3]])
    Traceback (most recent call last):
    ...
    TypeError: each row of m_b must be of the same size

Passing two matrix that can't be multiplied
    >>> matrix_mul([[5, 2, 3], [7, 13, 2], [1, 0, 3]], [[2, 3], [6, 9]])
    Traceback (most recent call last):
    ...
    ValueError: m_a and m_b can't be multiplied

Missing one argument
    >>> matrix_mul([[1, 2]])
    Traceback (most recent call last):
    ...
    TypeError: matrix_mul() missing 1 required positional argument: 'm_b'

Missing arguments
    >>> matrix_mul()
    Traceback (most recent call last):
    ...
    TypeError: matrix_mul() missing 2 required positional arguments: 'm_a' and 'm_b'
