Test for lazy_matrix_mul
============================

Using ``lazy_matrix_mul``
--------------------------

Import function from module:

>>> matrix_mul = __import__('101-lazy_matrix_mul').lazy_matrix_mul

Multiply two matrices:

    >>> matrix_mul([[1, 2], [3, 4]], [[1, 2], [3, 4]])
    array([[ 7, 10],
    	   [15, 22]])

Multiplying two matrices 2

    >>> matrix_mul([[1, 2]], [[3, 4], [5, 6]])
    array([[13, 16]])

Multiplying two matrices 3

    >>> list1 = [[1, 4, 7], [2, 5, 8], [3, 6, 9]]
    >>> list2 = [[1, -1, 2], [2, -1, 2], [3, -3, 0]]
    >>> matrix_mul(list1, list2)
    array([[ 30, -26,  10],
    	   [ 36, -31,  14],
	   [ 42, -36,  18]])

Multiplying two matrices 4

    >>> matrix_mul([[1, 5, 7]], [[3], [5], [8]])
    array([[84]])

Passing None as a matrix

    >>> matrix_mul(None, None)
    Traceback (most recent call last):
    ...
    ValueError: matmul: Input operand 0 does not have enough dimensions (has 0, gufunc core with signature (n?,k),(k,m?)->(n?,m?) requires 1)

Passing None as a matrix

    >>> matrix_mul([[7, 12]], None)
    Traceback (most recent call last):
    ...
    ValueError: matmul: Input operand 1 does not have enough dimensions (has 0, gufunc core with signature (n?,k),(k,m?)->(n?,m?) requires 1)

Passing a tuple as a matrix

    >>> matrix_mul((1, 3, 5), [[1.3], [5.2], [7.7]])
    array([55.4])
